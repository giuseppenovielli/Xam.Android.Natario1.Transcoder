com/otaliastudios/transcoder/BuildConfig = Com.Otaliastudios.Transcoder.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
com/otaliastudios/transcoder/common/ExactSize = Com.Otaliastudios.Transcoder.Common.ExactSize
  <init>(II)V = .ctor(int, int)
  getHeight()I = Height
  getWidth()I = Width
com/otaliastudios/transcoder/common/Size = Com.Otaliastudios.Transcoder.Common.Size
  <init>(II)V = .ctor(int, int)
  getMajor()I = Major
  getMinor()I = Minor
com/otaliastudios/transcoder/common/TrackStatus = Com.Otaliastudios.Transcoder.Common.TrackStatus
  ABSENT = Absent
  COMPRESSING = Compressing
  PASS_THROUGH = PassThrough
  REMOVING = Removing
  isTranscoding()Z = IsTranscoding
  valueOf(Ljava/lang/String;)Lcom/otaliastudios/transcoder/common/TrackStatus; = ValueOf(string)
  values()[Lcom/otaliastudios/transcoder/common/TrackStatus; = Values()
com/otaliastudios/transcoder/common/TrackType = Com.Otaliastudios.Transcoder.Common.TrackType
  AUDIO = Audio
  VIDEO = Video
  valueOf(Ljava/lang/String;)Lcom/otaliastudios/transcoder/common/TrackType; = ValueOf(string)
  values()[Lcom/otaliastudios/transcoder/common/TrackType; = Values()
com/otaliastudios/transcoder/common/TrackTypeKt = Com.Otaliastudios.Transcoder.Common.TrackTypeKt
  getTrackType(Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackType; = GetTrackType(Android.Media.MediaFormat)
  getTrackTypeOrNull(Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackType; = GetTrackTypeOrNull(Android.Media.MediaFormat)
com/otaliastudios/transcoder/internal/audio/ConversionsKt = Com.Otaliastudios.Transcoder.Internal.Audio.ConversionsKt
com/otaliastudios/transcoder/internal/audio/remix/DownMixAudioRemixer = Com.Otaliastudios.Transcoder.Internal.Audio.Remix.DownMixAudioRemixer
  <init>()V = .ctor()
  getRemixedSize(I)I = GetRemixedSize(int)
  remix(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;)V = Remix(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer)
com/otaliastudios/transcoder/internal/audio/remix/PassThroughAudioRemixer = Com.Otaliastudios.Transcoder.Internal.Audio.Remix.PassThroughAudioRemixer
  <init>()V = .ctor()
  getRemixedSize(I)I = GetRemixedSize(int)
  remix(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;)V = Remix(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer)
com/otaliastudios/transcoder/internal/audio/remix/UpMixAudioRemixer = Com.Otaliastudios.Transcoder.Internal.Audio.Remix.UpMixAudioRemixer
  <init>()V = .ctor()
  getRemixedSize(I)I = GetRemixedSize(int)
  remix(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;)V = Remix(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer)
com/otaliastudios/transcoder/internal/audio/ShortsKt = Com.Otaliastudios.Transcoder.Internal.Audio.ShortsKt
  BYTES_PER_SHORT = BytesPerShort
com/otaliastudios/transcoder/internal/media/MediaCodecBuffers = Com.Otaliastudios.Transcoder.Internal.Media.MediaCodecBuffers
  <init>(Landroid/media/MediaCodec;)V = .ctor(Android.Media.MediaCodec)
  getInputBuffer(I)Ljava/nio/ByteBuffer; = GetInputBuffer(int)
  getOutputBuffer(I)Ljava/nio/ByteBuffer; = GetOutputBuffer(int)
  onOutputBuffersChanged()V = OnOutputBuffersChanged()
com/otaliastudios/transcoder/internal/media/MediaFormatConstants = Com.Otaliastudios.Transcoder.Internal.Media.MediaFormatConstants
  KEY_AVC_PPS = KeyAvcPps
  KEY_AVC_SPS = KeyAvcSps
  KEY_LEVEL = KeyLevel
  KEY_PROFILE = KeyProfile
  KEY_ROTATION_DEGREES = KeyRotationDegrees
  MIMETYPE_AUDIO_AAC = MimetypeAudioAac
  MIMETYPE_AUDIO_RAW = MimetypeAudioRaw
  MIMETYPE_VIDEO_AVC = MimetypeVideoAvc
  MIMETYPE_VIDEO_H263 = MimetypeVideoH263
  MIMETYPE_VIDEO_VP8 = MimetypeVideoVp8
com/otaliastudios/transcoder/internal/media/MediaFormatProvider = Com.Otaliastudios.Transcoder.Internal.Media.MediaFormatProvider
  <init>()V = .ctor()
  provideMediaFormat(Lcom/otaliastudios/transcoder/source/DataSource;Lcom/otaliastudios/transcoder/common/TrackType;Landroid/media/MediaFormat;)Landroid/media/MediaFormat; = ProvideMediaFormat(Com.Otaliastudios.Transcoder.Source.IDataSource, Com.Otaliastudios.Transcoder.Common.TrackType, Android.Media.MediaFormat)
com/otaliastudios/transcoder/internal/pipeline/PipelineKt = Com.Otaliastudios.Transcoder.Internal.Pipeline.PipelineKt
com/otaliastudios/transcoder/internal/pipeline/PipelinesKt = Com.Otaliastudios.Transcoder.Internal.Pipeline.PipelinesKt
com/otaliastudios/transcoder/internal/pipeline/StepKt = Com.Otaliastudios.Transcoder.Internal.Pipeline.StepKt
com/otaliastudios/transcoder/internal/utils/AvcCsdUtils = Com.Otaliastudios.Transcoder.Internal.Utils.AvcCsdUtils
  getSpsBuffer(Landroid/media/MediaFormat;)Ljava/nio/ByteBuffer; = GetSpsBuffer(Android.Media.MediaFormat)
com/otaliastudios/transcoder/internal/utils/AvcSpsUtils = Com.Otaliastudios.Transcoder.Internal.Utils.AvcSpsUtils
  <init>()V = .ctor()
  PROFILE_IDC_BASELINE = ProfileIdcBaseline
  PROFILE_IDC_EXTENDED = ProfileIdcExtended
  PROFILE_IDC_HIGH = ProfileIdcHigh
  PROFILE_IDC_MAIN = ProfileIdcMain
  getProfileIdc(Ljava/nio/ByteBuffer;)B = GetProfileIdc(Java.Nio.ByteBuffer)
  getProfileName(B)Ljava/lang/String; = GetProfileName(sbyte)
com/otaliastudios/transcoder/internal/utils/BitRates = Com.Otaliastudios.Transcoder.Internal.Utils.BitRates
  <init>()V = .ctor()
  estimateAudioBitRate(II)J = EstimateAudioBitRate(int, int)
  estimateVideoBitRate(III)J = EstimateVideoBitRate(int, int, int)
com/otaliastudios/transcoder/internal/utils/DebugKt = Com.Otaliastudios.Transcoder.Internal.Utils.DebugKt
com/otaliastudios/transcoder/internal/utils/EosKt = Com.Otaliastudios.Transcoder.Internal.Utils.EosKt
  forcingEos(Lcom/otaliastudios/transcoder/source/DataSource;Lkotlin/jvm/functions/Function0;)Lcom/otaliastudios/transcoder/source/DataSource; = ForcingEos(Com.Otaliastudios.Transcoder.Source.IDataSource, Kotlin.Jvm.Functions.IFunction0)
  ignoringEos(Lcom/otaliastudios/transcoder/sink/DataSink;Lkotlin/jvm/functions/Function0;)Lcom/otaliastudios/transcoder/sink/DataSink; = IgnoringEos(Com.Otaliastudios.Transcoder.Sink.IDataSink, Kotlin.Jvm.Functions.IFunction0)
com/otaliastudios/transcoder/internal/utils/ISO6709LocationParser = Com.Otaliastudios.Transcoder.Internal.Utils.ISO6709LocationParser
  <init>()V = .ctor()
  parse(Ljava/lang/String;)[F = Parse(string)
com/otaliastudios/transcoder/internal/utils/Logger = Com.Otaliastudios.Transcoder.Internal.Utils.Logger
  <init>(Ljava/lang/String;)V = .ctor(string)
  LEVEL_ERROR = LevelError
  LEVEL_INFO = LevelInfo
  LEVEL_VERBOSE = LevelVerbose
  LEVEL_WARNING = LevelWarning
  e(Ljava/lang/String;)V = E(string)
  e(Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, Java.Lang.Throwable)
  i(Ljava/lang/String;)V = I(string)
  i(Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, Java.Lang.Throwable)
  setLogLevel(I)V = SetLogLevel(int)
  v(Ljava/lang/String;)V = V(string)
  v(Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, Java.Lang.Throwable)
  w(Ljava/lang/String;)V = W(string)
  w(Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, Java.Lang.Throwable)
com/otaliastudios/transcoder/internal/utils/MutableTrackMap = Com.Otaliastudios.Transcoder.Internal.Utils.IMutableTrackMap
  getAudio()Ljava/lang/Object; = Audio
  setAudio(Ljava/lang/Object;)V = Audio
  getVideo()Ljava/lang/Object; = Video
  setVideo(Ljava/lang/Object;)V = Video
  reset(Ljava/lang/Object;Ljava/lang/Object;)V = Reset(Java.Lang.Object, Java.Lang.Object)
  set(Lcom/otaliastudios/transcoder/common/TrackType;Ljava/lang/Object;)V = Set(Com.Otaliastudios.Transcoder.Common.TrackType, Java.Lang.Object)
com/otaliastudios/transcoder/internal/utils/TrackMap = Com.Otaliastudios.Transcoder.Internal.Utils.ITrackMap
  getAudio()Ljava/lang/Object; = Audio
  getHasAudio()Z = HasAudio
  getHasVideo()Z = HasVideo
  getSize()I = Size
  getVideo()Ljava/lang/Object; = Video
  audioOrNull()Ljava/lang/Object; = AudioOrNull()
  get(Lcom/otaliastudios/transcoder/common/TrackType;)Ljava/lang/Object; = Get(Com.Otaliastudios.Transcoder.Common.TrackType)
  getOrNull(Lcom/otaliastudios/transcoder/common/TrackType;)Ljava/lang/Object; = GetOrNull(Com.Otaliastudios.Transcoder.Common.TrackType)
  has(Lcom/otaliastudios/transcoder/common/TrackType;)Z = Has(Com.Otaliastudios.Transcoder.Common.TrackType)
  iterator()Ljava/util/Iterator; = Iterator()
  videoOrNull()Ljava/lang/Object; = VideoOrNull()
com/otaliastudios/transcoder/internal/utils/TrackMapKt = Com.Otaliastudios.Transcoder.Internal.Utils.TrackMapKt
  mutableTrackMapOf(Ljava/lang/Object;)Lcom/otaliastudios/transcoder/internal/utils/MutableTrackMap; = MutableTrackMapOf(Java.Lang.Object)
  mutableTrackMapOf(Ljava/lang/Object;Ljava/lang/Object;)Lcom/otaliastudios/transcoder/internal/utils/MutableTrackMap; = MutableTrackMapOf(Java.Lang.Object, Java.Lang.Object)
  trackMapOf(Ljava/lang/Object;)Lcom/otaliastudios/transcoder/internal/utils/TrackMap; = TrackMapOf(Java.Lang.Object)
  trackMapOf(Ljava/lang/Object;Ljava/lang/Object;)Lcom/otaliastudios/transcoder/internal/utils/TrackMap; = TrackMapOf(Java.Lang.Object, Java.Lang.Object)
com/otaliastudios/transcoder/internal/video/FrameDropperKt = Com.Otaliastudios.Transcoder.Internal.Video.FrameDropperKt
com/otaliastudios/transcoder/resample/AudioResampler = Com.Otaliastudios.Transcoder.Resample.IAudioResampler
  DOWNSAMPLE = Downsample
  PASSTHROUGH = Passthrough
  UPSAMPLE = Upsample
  resample(Ljava/nio/ShortBuffer;ILjava/nio/ShortBuffer;II)V = Resample(Java.Nio.ShortBuffer, int, Java.Nio.ShortBuffer, int, int)
com/otaliastudios/transcoder/resample/DefaultAudioResampler = Com.Otaliastudios.Transcoder.Resample.DefaultAudioResampler
  <init>()V = .ctor()
  resample(Ljava/nio/ShortBuffer;ILjava/nio/ShortBuffer;II)V = Resample(Java.Nio.ShortBuffer, int, Java.Nio.ShortBuffer, int, int)
com/otaliastudios/transcoder/resample/DownsampleAudioResampler = Com.Otaliastudios.Transcoder.Resample.DownsampleAudioResampler
  <init>()V = .ctor()
  resample(Ljava/nio/ShortBuffer;ILjava/nio/ShortBuffer;II)V = Resample(Java.Nio.ShortBuffer, int, Java.Nio.ShortBuffer, int, int)
com/otaliastudios/transcoder/resample/PassThroughAudioResampler = Com.Otaliastudios.Transcoder.Resample.PassThroughAudioResampler
  <init>()V = .ctor()
  resample(Ljava/nio/ShortBuffer;ILjava/nio/ShortBuffer;II)V = Resample(Java.Nio.ShortBuffer, int, Java.Nio.ShortBuffer, int, int)
com/otaliastudios/transcoder/resample/UpsampleAudioResampler = Com.Otaliastudios.Transcoder.Resample.UpsampleAudioResampler
  <init>()V = .ctor()
  resample(Ljava/nio/ShortBuffer;ILjava/nio/ShortBuffer;II)V = Resample(Java.Nio.ShortBuffer, int, Java.Nio.ShortBuffer, int, int)
com/otaliastudios/transcoder/resize/AspectRatioResizer = Com.Otaliastudios.Transcoder.Resize.AspectRatioResizer
  <init>(F)V = .ctor(float)
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/AtMostResizer = Com.Otaliastudios.Transcoder.Resize.AtMostResizer
  <init>(I)V = .ctor(int)
  <init>(II)V = .ctor(int, int)
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/ExactResizer = Com.Otaliastudios.Transcoder.Resize.ExactResizer
  <init>(II)V = .ctor(int, int)
  <init>(Lcom/otaliastudios/transcoder/common/Size;)V = .ctor(Com.Otaliastudios.Transcoder.Common.Size)
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/FractionResizer = Com.Otaliastudios.Transcoder.Resize.FractionResizer
  <init>(F)V = .ctor(float)
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/MultiResizer = Com.Otaliastudios.Transcoder.Resize.MultiResizer
  <init>()V = .ctor()
  <init>([Lcom/otaliastudios/transcoder/resize/Resizer;)V = .ctor(params Com.Otaliastudios.Transcoder.Resize.IResizer[])
  addResizer(Lcom/otaliastudios/transcoder/resize/Resizer;)V = AddResizer(Com.Otaliastudios.Transcoder.Resize.IResizer)
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/PassThroughResizer = Com.Otaliastudios.Transcoder.Resize.PassThroughResizer
  <init>()V = .ctor()
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/resize/Resizer = Com.Otaliastudios.Transcoder.Resize.IResizer
  getOutputSize(Lcom/otaliastudios/transcoder/common/Size;)Lcom/otaliastudios/transcoder/common/Size; = GetOutputSize(Com.Otaliastudios.Transcoder.Common.Size)
com/otaliastudios/transcoder/sink/DataSink = Com.Otaliastudios.Transcoder.Sink.IDataSink
  release()V = Release()
  setLocation(DD)V = SetLocation(double, double)
  setOrientation(I)V = SetOrientation(int)
  setTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;Landroid/media/MediaFormat;)V = SetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType, Android.Media.MediaFormat)
  setTrackStatus(Lcom/otaliastudios/transcoder/common/TrackType;Lcom/otaliastudios/transcoder/common/TrackStatus;)V = SetTrackStatus(Com.Otaliastudios.Transcoder.Common.TrackType, Com.Otaliastudios.Transcoder.Common.TrackStatus)
  stop()V = Stop()
  writeTrack(Lcom/otaliastudios/transcoder/common/TrackType;Ljava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V = WriteTrack(Com.Otaliastudios.Transcoder.Common.TrackType, Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
com/otaliastudios/transcoder/sink/DefaultDataSink = Com.Otaliastudios.Transcoder.Sink.DefaultDataSink
  <init>(Ljava/io/FileDescriptor;)V = .ctor(Java.IO.FileDescriptor)
  <init>(Ljava/io/FileDescriptor;I)V = .ctor(Java.IO.FileDescriptor, int)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  release()V = Release()
  setLocation(DD)V = SetLocation(double, double)
  setOrientation(I)V = SetOrientation(int)
  setTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;Landroid/media/MediaFormat;)V = SetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType, Android.Media.MediaFormat)
  setTrackStatus(Lcom/otaliastudios/transcoder/common/TrackType;Lcom/otaliastudios/transcoder/common/TrackStatus;)V = SetTrackStatus(Com.Otaliastudios.Transcoder.Common.TrackType, Com.Otaliastudios.Transcoder.Common.TrackStatus)
  stop()V = Stop()
  writeTrack(Lcom/otaliastudios/transcoder/common/TrackType;Ljava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V = WriteTrack(Com.Otaliastudios.Transcoder.Common.TrackType, Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
com/otaliastudios/transcoder/sink/InvalidOutputFormatException = Com.Otaliastudios.Transcoder.Sink.InvalidOutputFormatException
com/otaliastudios/transcoder/sink/MultiDataSink = Com.Otaliastudios.Transcoder.Sink.MultiDataSink
  <init>([Lcom/otaliastudios/transcoder/sink/DataSink;)V = .ctor(params Com.Otaliastudios.Transcoder.Sink.IDataSink[])
  release()V = Release()
  setLocation(DD)V = SetLocation(double, double)
  setOrientation(I)V = SetOrientation(int)
  setTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;Landroid/media/MediaFormat;)V = SetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType, Android.Media.MediaFormat)
  setTrackStatus(Lcom/otaliastudios/transcoder/common/TrackType;Lcom/otaliastudios/transcoder/common/TrackStatus;)V = SetTrackStatus(Com.Otaliastudios.Transcoder.Common.TrackType, Com.Otaliastudios.Transcoder.Common.TrackStatus)
  stop()V = Stop()
  writeTrack(Lcom/otaliastudios/transcoder/common/TrackType;Ljava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V = WriteTrack(Com.Otaliastudios.Transcoder.Common.TrackType, Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
com/otaliastudios/transcoder/source/AssetFileDescriptorDataSource = Com.Otaliastudios.Transcoder.Source.AssetFileDescriptorDataSource
  <init>(Landroid/content/res/AssetFileDescriptor;)V = .ctor(Android.Content.Res.AssetFileDescriptor)
com/otaliastudios/transcoder/source/BlankAudioDataSource = Com.Otaliastudios.Transcoder.Source.BlankAudioDataSource
  <init>(J)V = .ctor(long)
  getDurationUs()J = DurationUs
  isDrained()Z = IsDrained
  isInitialized()Z = IsInitialized
  getOrientation()I = Orientation
  getPositionUs()J = PositionUs
  canReadTrack(Lcom/otaliastudios/transcoder/common/TrackType;)Z = CanReadTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  deinitialize()V = Deinitialize()
  getLocation()[D = GetLocation()
  getTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;)Landroid/media/MediaFormat; = GetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType)
  initialize()V = Initialize()
  readTrack(Lcom/otaliastudios/transcoder/source/DataSource$Chunk;)V = ReadTrack(Com.Otaliastudios.Transcoder.Source.DataSourceChunk)
  releaseTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = ReleaseTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  seekTo(J)J = SeekTo(long)
  selectTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = SelectTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
com/otaliastudios/transcoder/source/ClipDataSource = Com.Otaliastudios.Transcoder.Source.ClipDataSource
  <init>(Lcom/otaliastudios/transcoder/source/DataSource;J)V = .ctor(Com.Otaliastudios.Transcoder.Source.IDataSource, long)
  <init>(Lcom/otaliastudios/transcoder/source/DataSource;JJ)V = .ctor(Com.Otaliastudios.Transcoder.Source.IDataSource, long, long)
com/otaliastudios/transcoder/source/DataSource = Com.Otaliastudios.Transcoder.Source.IDataSource
  getDurationUs()J = DurationUs
  isDrained()Z = IsDrained
  isInitialized()Z = IsInitialized
  getOrientation()I = Orientation
  getPositionUs()J = PositionUs
  canReadTrack(Lcom/otaliastudios/transcoder/common/TrackType;)Z = CanReadTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  deinitialize()V = Deinitialize()
  getLocation()[D = GetLocation()
  getTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;)Landroid/media/MediaFormat; = GetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType)
  initialize()V = Initialize()
  readTrack(Lcom/otaliastudios/transcoder/source/DataSource$Chunk;)V = ReadTrack(Com.Otaliastudios.Transcoder.Source.DataSourceChunk)
  releaseTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = ReleaseTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  seekTo(J)J = SeekTo(long)
  selectTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = SelectTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
com/otaliastudios/transcoder/source/DataSourceWrapper = Com.Otaliastudios.Transcoder.Source.DataSourceWrapper
  <init>()V = .ctor()
  <init>(Lcom/otaliastudios/transcoder/source/DataSource;)V = .ctor(Com.Otaliastudios.Transcoder.Source.IDataSource)
  getDurationUs()J = DurationUs
  isDrained()Z = IsDrained
  isInitialized()Z = IsInitialized
  getOrientation()I = Orientation
  getPositionUs()J = PositionUs
  getSource()Lcom/otaliastudios/transcoder/source/DataSource; = Source
  setSource(Lcom/otaliastudios/transcoder/source/DataSource;)V = Source
  canReadTrack(Lcom/otaliastudios/transcoder/common/TrackType;)Z = CanReadTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  deinitialize()V = Deinitialize()
  getLocation()[D = GetLocation()
  getTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;)Landroid/media/MediaFormat; = GetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType)
  initialize()V = Initialize()
  readTrack(Lcom/otaliastudios/transcoder/source/DataSource$Chunk;)V = ReadTrack(Com.Otaliastudios.Transcoder.Source.DataSourceChunk)
  releaseTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = ReleaseTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  seekTo(J)J = SeekTo(long)
  selectTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = SelectTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
com/otaliastudios/transcoder/source/DefaultDataSource = Com.Otaliastudios.Transcoder.Source.DefaultDataSource
  <init>()V = .ctor()
  getDurationUs()J = DurationUs
  isDrained()Z = IsDrained
  isInitialized()Z = IsInitialized
  getOrientation()I = Orientation
  getPositionUs()J = PositionUs
  canReadTrack(Lcom/otaliastudios/transcoder/common/TrackType;)Z = CanReadTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  deinitialize()V = Deinitialize()
  getLocation()[D = GetLocation()
  getTrackFormat(Lcom/otaliastudios/transcoder/common/TrackType;)Landroid/media/MediaFormat; = GetTrackFormat(Com.Otaliastudios.Transcoder.Common.TrackType)
  initialize()V = Initialize()
  initializeExtractor(Landroid/media/MediaExtractor;)V = InitializeExtractor(Android.Media.MediaExtractor)
  initializeRetriever(Landroid/media/MediaMetadataRetriever;)V = InitializeRetriever(Android.Media.MediaMetadataRetriever)
  readTrack(Lcom/otaliastudios/transcoder/source/DataSource$Chunk;)V = ReadTrack(Com.Otaliastudios.Transcoder.Source.DataSourceChunk)
  releaseTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = ReleaseTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
  seekTo(J)J = SeekTo(long)
  selectTrack(Lcom/otaliastudios/transcoder/common/TrackType;)V = SelectTrack(Com.Otaliastudios.Transcoder.Common.TrackType)
com/otaliastudios/transcoder/source/FileDescriptorDataSource = Com.Otaliastudios.Transcoder.Source.FileDescriptorDataSource
  <init>(Ljava/io/FileDescriptor;)V = .ctor(Java.IO.FileDescriptor)
  <init>(Ljava/io/FileDescriptor;JJ)V = .ctor(Java.IO.FileDescriptor, long, long)
  initializeExtractor(Landroid/media/MediaExtractor;)V = InitializeExtractor(Android.Media.MediaExtractor)
  initializeRetriever(Landroid/media/MediaMetadataRetriever;)V = InitializeRetriever(Android.Media.MediaMetadataRetriever)
com/otaliastudios/transcoder/source/FilePathDataSource = Com.Otaliastudios.Transcoder.Source.FilePathDataSource
  <init>(Ljava/lang/String;)V = .ctor(string)
com/otaliastudios/transcoder/source/TrimDataSource = Com.Otaliastudios.Transcoder.Source.TrimDataSource
  <init>(Lcom/otaliastudios/transcoder/source/DataSource;J)V = .ctor(Com.Otaliastudios.Transcoder.Source.IDataSource, long)
  <init>(Lcom/otaliastudios/transcoder/source/DataSource;JJ)V = .ctor(Com.Otaliastudios.Transcoder.Source.IDataSource, long, long)
com/otaliastudios/transcoder/source/UriDataSource = Com.Otaliastudios.Transcoder.Source.UriDataSource
  <init>(Landroid/content/Context;Landroid/net/Uri;)V = .ctor(Android.Content.Context, Android.Net.Uri)
  initializeExtractor(Landroid/media/MediaExtractor;)V = InitializeExtractor(Android.Media.MediaExtractor)
  initializeRetriever(Landroid/media/MediaMetadataRetriever;)V = InitializeRetriever(Android.Media.MediaMetadataRetriever)
com/otaliastudios/transcoder/strategy/DefaultAudioStrategy = Com.Otaliastudios.Transcoder.Strategy.DefaultAudioStrategy
  <init>(Lcom/otaliastudios/transcoder/strategy/DefaultAudioStrategy$Options;)V = .ctor(Com.Otaliastudios.Transcoder.Strategy.DefaultAudioStrategy.Options)
  BITRATE_UNKNOWN = BitrateUnknown
  CHANNELS_AS_INPUT = ChannelsAsInput
  SAMPLE_RATE_AS_INPUT = SampleRateAsInput
  createOutputFormat(Ljava/util/List;Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackStatus; = CreateOutputFormat(System.Collections.Generic.IList<Android.Media.MediaFormat>, Android.Media.MediaFormat)
  builder()Lcom/otaliastudios/transcoder/strategy/DefaultAudioStrategy$Builder; = InvokeBuilder()
com/otaliastudios/transcoder/strategy/DefaultVideoStrategies = Com.Otaliastudios.Transcoder.Strategy.DefaultVideoStrategies
  for360x480()Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy; = For360x480()
  for720x1280()Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy; = For720x1280()
com/otaliastudios/transcoder/strategy/DefaultVideoStrategy = Com.Otaliastudios.Transcoder.Strategy.DefaultVideoStrategy
  <init>(Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Options;)V = .ctor(Com.Otaliastudios.Transcoder.Strategy.DefaultVideoStrategy.Options)
  BITRATE_UNKNOWN = BitrateUnknown
  DEFAULT_FRAME_RATE = DefaultFrameRate
  DEFAULT_KEY_FRAME_INTERVAL = DefaultKeyFrameInterval
  aspectRatio(F)Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Builder; = AspectRatio(float)
  atMost(I)Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Builder; = AtMost(int)
  atMost(II)Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Builder; = AtMost(int, int)
  createOutputFormat(Ljava/util/List;Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackStatus; = CreateOutputFormat(System.Collections.Generic.IList<Android.Media.MediaFormat>, Android.Media.MediaFormat)
  exact(II)Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Builder; = Exact(int, int)
  fraction(F)Lcom/otaliastudios/transcoder/strategy/DefaultVideoStrategy$Builder; = Fraction(float)
com/otaliastudios/transcoder/strategy/PassThroughTrackStrategy = Com.Otaliastudios.Transcoder.Strategy.PassThroughTrackStrategy
  <init>()V = .ctor()
  createOutputFormat(Ljava/util/List;Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackStatus; = CreateOutputFormat(System.Collections.Generic.IList<Android.Media.MediaFormat>, Android.Media.MediaFormat)
com/otaliastudios/transcoder/strategy/RemoveTrackStrategy = Com.Otaliastudios.Transcoder.Strategy.RemoveTrackStrategy
  <init>()V = .ctor()
  createOutputFormat(Ljava/util/List;Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackStatus; = CreateOutputFormat(System.Collections.Generic.IList<Android.Media.MediaFormat>, Android.Media.MediaFormat)
com/otaliastudios/transcoder/strategy/TrackStrategy = Com.Otaliastudios.Transcoder.Strategy.ITrackStrategy
  createOutputFormat(Ljava/util/List;Landroid/media/MediaFormat;)Lcom/otaliastudios/transcoder/common/TrackStatus; = CreateOutputFormat(System.Collections.Generic.IList<Android.Media.MediaFormat>, Android.Media.MediaFormat)
com/otaliastudios/transcoder/stretch/AudioStretcher = Com.Otaliastudios.Transcoder.Stretch.IAudioStretcher
  CUT = Cut
  INSERT = Insert
  PASSTHROUGH = Passthrough
  stretch(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V = Stretch(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer, int)
com/otaliastudios/transcoder/stretch/CutAudioStretcher = Com.Otaliastudios.Transcoder.Stretch.CutAudioStretcher
  <init>()V = .ctor()
  stretch(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V = Stretch(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer, int)
com/otaliastudios/transcoder/stretch/DefaultAudioStretcher = Com.Otaliastudios.Transcoder.Stretch.DefaultAudioStretcher
  <init>()V = .ctor()
  stretch(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V = Stretch(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer, int)
com/otaliastudios/transcoder/stretch/InsertAudioStretcher = Com.Otaliastudios.Transcoder.Stretch.InsertAudioStretcher
  <init>()V = .ctor()
  stretch(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V = Stretch(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer, int)
com/otaliastudios/transcoder/stretch/PassThroughAudioStretcher = Com.Otaliastudios.Transcoder.Stretch.PassThroughAudioStretcher
  <init>()V = .ctor()
  stretch(Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V = Stretch(Java.Nio.ShortBuffer, Java.Nio.ShortBuffer, int)
com/otaliastudios/transcoder/thumbnail/CoverThumbnailRequest = Com.Otaliastudios.Transcoder.Thumbnail.CoverThumbnailRequest
  <init>()V = .ctor()
  locate(J)Ljava/util/List; = Locate(long)
com/otaliastudios/transcoder/thumbnail/SingleThumbnailRequest = Com.Otaliastudios.Transcoder.Thumbnail.SingleThumbnailRequest
  <init>(J)V = .ctor(long)
  locate(J)Ljava/util/List; = Locate(long)
com/otaliastudios/transcoder/thumbnail/Thumbnail = Com.Otaliastudios.Transcoder.Thumbnail.Thumbnail
  getBitmap()Landroid/graphics/Bitmap; = Bitmap
  getPositionUs()J = PositionUs
  getRequest()Lcom/otaliastudios/transcoder/thumbnail/ThumbnailRequest; = Request
com/otaliastudios/transcoder/thumbnail/ThumbnailRequest = Com.Otaliastudios.Transcoder.Thumbnail.IThumbnailRequest
  locate(J)Ljava/util/List; = Locate(long)
com/otaliastudios/transcoder/thumbnail/UniformThumbnailRequest = Com.Otaliastudios.Transcoder.Thumbnail.UniformThumbnailRequest
  <init>(I)V = .ctor(int)
  locate(J)Ljava/util/List; = Locate(long)
com/otaliastudios/transcoder/Thumbnailer = Com.Otaliastudios.Transcoder.Thumbnailer
  <init>(Lkotlin/jvm/internal/DefaultConstructorMarker;)V = .ctor(Kotlin.Jvm.Internal.DefaultConstructorMarker)
  Companion = Companion
  thumbnails(Lcom/otaliastudios/transcoder/ThumbnailerOptions;)Ljava/util/concurrent/Future; = Thumbnails(Com.Otaliastudios.Transcoder.ThumbnailerOptions)
  thumbnails(Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/Future; = Thumbnails(Kotlin.Jvm.Functions.IFunction1)
com/otaliastudios/transcoder/ThumbnailerListener = Com.Otaliastudios.Transcoder.IThumbnailerListener
  onThumbnail(Lcom/otaliastudios/transcoder/thumbnail/Thumbnail;)V = OnThumbnail(Com.Otaliastudios.Transcoder.Thumbnail.Thumbnail)
  onThumbnailsCanceled()V = OnThumbnailsCanceled()
  onThumbnailsCompleted(Ljava/util/List;)V = OnThumbnailsCompleted(System.Collections.Generic.IList<Com.Otaliastudios.Transcoder.Thumbnail.Thumbnail>)
  onThumbnailsFailed(Ljava/lang/Throwable;)V = OnThumbnailsFailed(Java.Lang.Throwable)
com/otaliastudios/transcoder/ThumbnailerOptions = Com.Otaliastudios.Transcoder.ThumbnailerOptions
  <init>(Ljava/util/List;Lcom/otaliastudios/transcoder/resize/Resizer;ILjava/util/List;Lcom/otaliastudios/transcoder/ThumbnailerListener;Landroid/os/Handler;)V = .ctor(System.Collections.Generic.IList<Com.Otaliastudios.Transcoder.Source.IDataSource>, Com.Otaliastudios.Transcoder.Resize.IResizer, int, System.Collections.Generic.IList<Com.Otaliastudios.Transcoder.Thumbnail.IThumbnailRequest>, Com.Otaliastudios.Transcoder.IThumbnailerListener, Android.OS.Handler)
  getDataSources()Ljava/util/List; = DataSources
  getListener()Lcom/otaliastudios/transcoder/ThumbnailerListener; = Listener
  getListenerHandler()Landroid/os/Handler; = ListenerHandler
  getResizer()Lcom/otaliastudios/transcoder/resize/Resizer; = Resizer
  getRotation()I = Rotation
  getThumbnailRequests()Ljava/util/List; = ThumbnailRequests
com/otaliastudios/transcoder/time/DefaultTimeInterpolator = Com.Otaliastudios.Transcoder.Time.DefaultTimeInterpolator
  <init>()V = .ctor()
  interpolate(Lcom/otaliastudios/transcoder/common/TrackType;J)J = Interpolate(Com.Otaliastudios.Transcoder.Common.TrackType, long)
com/otaliastudios/transcoder/time/SpeedTimeInterpolator = Com.Otaliastudios.Transcoder.Time.SpeedTimeInterpolator
  <init>(F)V = .ctor(float)
  getFactor()F = Factor
  interpolate(Lcom/otaliastudios/transcoder/common/TrackType;J)J = Interpolate(Com.Otaliastudios.Transcoder.Common.TrackType, long)
com/otaliastudios/transcoder/time/TimeInterpolator = Com.Otaliastudios.Transcoder.Time.ITimeInterpolator
  interpolate(Lcom/otaliastudios/transcoder/common/TrackType;J)J = Interpolate(Com.Otaliastudios.Transcoder.Common.TrackType, long)
com/otaliastudios/transcoder/Transcoder = Com.Otaliastudios.Transcoder.Transcoder
  SUCCESS_NOT_NEEDED = SuccessNotNeeded
  SUCCESS_TRANSCODED = SuccessTranscoded
  getInstance()Lcom/otaliastudios/transcoder/Transcoder; = Instance
  into(Lcom/otaliastudios/transcoder/sink/DataSink;)Lcom/otaliastudios/transcoder/TranscoderOptions$Builder; = Into(Com.Otaliastudios.Transcoder.Sink.IDataSink)
  into(Ljava/io/FileDescriptor;)Lcom/otaliastudios/transcoder/TranscoderOptions$Builder; = Into(Java.IO.FileDescriptor)
  into(Ljava/lang/String;)Lcom/otaliastudios/transcoder/TranscoderOptions$Builder; = Into(string)
  transcode(Lcom/otaliastudios/transcoder/TranscoderOptions;)Ljava/util/concurrent/Future; = Transcode(Com.Otaliastudios.Transcoder.TranscoderOptions)
com/otaliastudios/transcoder/TranscoderListener = Com.Otaliastudios.Transcoder.ITranscoderListener
  onTranscodeCanceled()V = OnTranscodeCanceled()
  onTranscodeCompleted(I)V = OnTranscodeCompleted(int)
  onTranscodeFailed(Ljava/lang/Throwable;)V = OnTranscodeFailed(Java.Lang.Throwable)
  onTranscodeProgress(D)V = OnTranscodeProgress(double)
com/otaliastudios/transcoder/TranscoderOptions = Com.Otaliastudios.Transcoder.TranscoderOptions
  getAudioDataSources()Ljava/util/List; = AudioDataSources
  getAudioResampler()Lcom/otaliastudios/transcoder/resample/AudioResampler; = AudioResampler
  getAudioStretcher()Lcom/otaliastudios/transcoder/stretch/AudioStretcher; = AudioStretcher
  getAudioTrackStrategy()Lcom/otaliastudios/transcoder/strategy/TrackStrategy; = AudioTrackStrategy
  getDataSink()Lcom/otaliastudios/transcoder/sink/DataSink; = DataSink
  getListener()Lcom/otaliastudios/transcoder/TranscoderListener; = Listener
  getListenerHandler()Landroid/os/Handler; = ListenerHandler
  getTimeInterpolator()Lcom/otaliastudios/transcoder/time/TimeInterpolator; = TimeInterpolator
  getValidator()Lcom/otaliastudios/transcoder/validator/Validator; = Validator
  getVideoDataSources()Ljava/util/List; = VideoDataSources
  getVideoRotation()I = VideoRotation
  getVideoTrackStrategy()Lcom/otaliastudios/transcoder/strategy/TrackStrategy; = VideoTrackStrategy
com/otaliastudios/transcoder/validator/DefaultValidator = Com.Otaliastudios.Transcoder.Validator.DefaultValidator
  <init>()V = .ctor()
  validate(Lcom/otaliastudios/transcoder/common/TrackStatus;Lcom/otaliastudios/transcoder/common/TrackStatus;)Z = Validate(Com.Otaliastudios.Transcoder.Common.TrackStatus, Com.Otaliastudios.Transcoder.Common.TrackStatus)
com/otaliastudios/transcoder/validator/Validator = Com.Otaliastudios.Transcoder.Validator.IValidator
  validate(Lcom/otaliastudios/transcoder/common/TrackStatus;Lcom/otaliastudios/transcoder/common/TrackStatus;)Z = Validate(Com.Otaliastudios.Transcoder.Common.TrackStatus, Com.Otaliastudios.Transcoder.Common.TrackStatus)
com/otaliastudios/transcoder/validator/WriteAlwaysValidator = Com.Otaliastudios.Transcoder.Validator.WriteAlwaysValidator
  <init>()V = .ctor()
  validate(Lcom/otaliastudios/transcoder/common/TrackStatus;Lcom/otaliastudios/transcoder/common/TrackStatus;)Z = Validate(Com.Otaliastudios.Transcoder.Common.TrackStatus, Com.Otaliastudios.Transcoder.Common.TrackStatus)
com/otaliastudios/transcoder/validator/WriteVideoValidator = Com.Otaliastudios.Transcoder.Validator.WriteVideoValidator
  <init>()V = .ctor()
  validate(Lcom/otaliastudios/transcoder/common/TrackStatus;Lcom/otaliastudios/transcoder/common/TrackStatus;)Z = Validate(Com.Otaliastudios.Transcoder.Common.TrackStatus, Com.Otaliastudios.Transcoder.Common.TrackStatus)
